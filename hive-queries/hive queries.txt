▪Average length of stay per diagnosis.:
SELECT 
  d.icd9_code,
  AVG(DATEDIFF(a.dischtime, a.admittime)) AS avg_length_of_stay
FROM 
  admissions a
JOIN 
  diagnoses_icd d 
ON 
  a.hadm_id = d.hadm_id
GROUP BY 
  d.icd9_code
ORDER BY 
  avg_length_of_stay DESC;
----------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
▪Distribution of ICU readmissions.:

SELECT 
    readmit_flag,
    COUNT(*) AS num_patients
FROM (
    SELECT 
        subject_id,
        hadm_id,
        COUNT(icustay_id) AS icu_visits,
        CASE 
            WHEN COUNT(icustay_id) > 1 THEN 'Readmitted'
            ELSE 'Single Stay'
        END AS readmit_flag
    FROM 
        icustays
    GROUP BY 
        subject_id, hadm_id
) t
GROUP BY 
    readmit_flag;

##############
SELECT 
  gender,
  COUNT() AS total_patients,
  SUM(CASE WHEN dod IS NOT NULL THEN 1 ELSE 0 END) AS deaths,
  ROUND((SUM(CASE WHEN dod IS NOT NULL THEN 1 ELSE 0 END) / COUNT()) * 100, 2) AS mortality_rate
FROM 
  patients
GROUP BY 
  gender;
----------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
▪	Mortality rates by demographic groups.:
SELECT 
  subject_id,
  COUNT(icustay_id) AS icu_stays
FROM 
  icustays
GROUP BY 
  subject_id
HAVING 
  COUNT(icustay_id) > 1
ORDER BY 
  icu_stays DESC;

#################
WITH patient_age AS (
    SELECT 
        p.subject_id,
        p.gender,
        FLOOR(DATEDIFF(a.admittime, p.dob) / 365.25) AS age,
        a.deathtime
    FROM 
        patients p
    JOIN 
        admissions a ON p.subject_id = a.subject_id
),
age_groups AS (
    SELECT *,
        CASE
            WHEN age < 18 THEN '0-17'
            WHEN age BETWEEN 18 AND 39 THEN '18-39'
            WHEN age BETWEEN 40 AND 64 THEN '40-64'
            WHEN age BETWEEN 65 AND 79 THEN '65-79'
            ELSE '80+'
        END AS age_group
    FROM 
        patient_age
)
SELECT 
    gender,
    age_group,
    COUNT(*) AS total_admissions,
    SUM(CASE WHEN deathtime IS NOT NULL THEN 1 ELSE 0 END) AS num_deaths,
    ROUND(SUM(CASE WHEN deathtime IS NOT NULL THEN 1 ELSE 0 END) / COUNT(*) * 100, 2) AS mortality_rate_pct
FROM 
    age_groups
GROUP BY 
    gender, age_group
ORDER BY 
    gender, age_group;
--------------------------------------------------------------------

